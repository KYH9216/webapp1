<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	id="WebApp_ID" version="4.0">
	
	



	<listener>
		<!--  Root WebApplicationContext 설정 -->
		<!-- was에 웹애플리케이션이 처음 배치될 때,실행할 때 발생하는 이벤트를 처리하는 객체를 등록한다. -->
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
			<!-- 위에를 실행하면 Root WebApplicationContext 생성한다. -->
		</listener-class>

	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/root/*.xml</param-value><!-- dispatcher들이 결국 classpath로 합쳐지기 때문에 *.xml을 사용한다. -->
	</context-param>
	
	<!-- WebApplicationContext 생성한다 -->
	<!--  servlet은 여러개 생성 가능하다. -->
	<!-- sevrlet은 이름과 설정경로가 달라야 한다. -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/dispatcher/*.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!-- 객체가 생성되는 시점 지정, load-on-startup은 객체가 배열될때 생성된다. -->
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name><!-- 처리할 dispatcher1 -->
		<url-pattern>/</url-pattern><!-- 브라우저의 요청 -->
	</servlet-mapping>
	
	<!--http://localhost:8080/webapp1/xxx  -->
	<!--네이버의 mail = dispatcher1   news = dispatcher2 가 처리한다.  -->
	
	
	<!--WebApplicationContext 생성한다  -->
	
	
	
	<!--http://localhost:8080/webapp1/dispatcher1/xxx  -->
	
</web-app>